; *************************
; Project: FLOP
; Author:  S0lll0s
; File: screenutils.dasm
; *************************

:_scr_string
	SET PUSH, Y
	;SET C, 0xf000 ; fi
:_scr_string_loop
	IFE [J], 0
		SET PC, _scr_string_done
	SET Y, B
	BOR Y, [J]
	STI [I], Y
	SET PC, _scr_string_loop
:_scr_string_done
	SET Y, POP
	SET PC, POP
	
;#macro scr_stringf( string, cursor, color ) {
;	SET PUSH, I
;	SET PUSH, J
;	SET PUSH, B
;	SET I, cursor
;	SET J, string
;	SET B, color
;	JSR _scr_string
;	SET B, POP
;	SET J, POP
;	SET I, POP
;}

;#macro scr_string( string, cursor ) {
;	scr_stringf( string, cursor, 0xf000 )
;}
	
:_scr_packed_string
	SET PUSH, Y
:_scr_packed_string_loop
	
	SET Y, [J]	; high byte
	SHR Y, 8    ; shift high byte to low one
	AND Y, 0x7f ; clear high
	
	IFE Y, 0
		SET PC, _scr_packed_string_done
	
	BOR Y, B    ; apply format
	SET [I], Y
	ADD I, 1
	
	SET Y, [J]  ; low byte
    AND Y, 0x7f ; clear out high byte
  
    IFE Y, 0
		SET PC, _scr_packed_string_done
		
	BOR Y, B    ; apply format
	STI [I], Y  ; increment I and J
	
	SET PC, _scr_packed_string_loop
:_scr_packed_string_done
	SET Y, POP
	SET PC, POP
	
;#macro scr_packed_stringf( string, cursor, color ) {
;	SET PUSH, I
;	SET PUSH, J
;	SET PUSH, B
;	SET I, cursor
;	SET J, string
;	SET B, color
;	JSR _scr_packed_string
;	SET B, POP
;	SET J, POP
;	SET I, POP
;}

;#macro scr_packed_string( string, cursor ) {
;	scr_packed_stringf( string, cursor, 0xf000 )
;}


;#macro scr_string( string, cursor ) {
;	scr_stringf( string, cursor, 0xf000 )
;}
	
:_scr_reformat_string
	SET PUSH, Y
	;SET C, 0xf000 ; fi
:_scr_reformat_string_loop
	IFE I, J
		SET PC, _scr_reformat_string_done
	SET Y, [I]
	AND Y, 0x00ff
	IFE Y, 0
		SET Y, 0x20
	BOR Y, B
	SET [I], Y
	ADD I, 1
	SET PC, _scr_reformat_string_loop
:_scr_reformat_string_done
	SET Y, POP
	SET PC, POP