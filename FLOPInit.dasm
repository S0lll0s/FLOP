; *************************
; Project: FLOP
; File: FLOPInit.dasm
; *************************
;
; Initializes an empty floppy
;
; This will not empty the sectors (except the header)

:_main
	SET C, hwenum_targets
 	SET Y, 4
	JSR _hwenum
    
    SET A, 3
    SET B, 2          ; interrupts with message 2 mean key event
    HWI [keyboard_id]
    
	SET A, 0
	SET B, 0x8000     ; map screen to 8000
	HWI [lem1802_id]
    
    SET A, 1
    SET X, 0x35
    HWI [m35fd_id]    ; interrupt 0x35 means floppy state change
    
    IAS _flop_interrupt
    
	SET [0x8000], 0x2041
	
	SET J, _flop_enter_name
	SET I, 0x8040
	SET B, 0x4000
	JSR _scr_packed_string
	
	SET X, 0
	SET [0x8060], 0x8088 ; cursor
_flop_loop:
 	SET PC, _flop_loop
    
:_flop_interrupt
	IFN A, 0x35
		IFN A, 2
			RFI 0
			
	IFE A, 0x35
		SET PC, _flop_state_change
	
	SET A, 1
	HWI [keyboard_id]
	
	IFG C, 0x1f
		IFL C, 0x81
			SET PC, _flop_ascii
	IFE C, 0x10
		SET PC, _flop_backspace
	IFE C, 0x11
		SET PC, _flop_return
	RFI 0
	
:_flop_ascii
	IFE X, 32
		RFI 0
	SET B, C
	SET Y, X
	MOD Y, 2
	IFE Y, 0 ; even means shift higher
		SHL B, 8
	SET Y, X
	DIV Y, 2
	SET Z, [_flop_name+Y]
	BOR Z, B
	SET [_flop_name+Y], Z
	
	SET Y, X
	ADD Y, 0x8060
	BOR C, 0xf000
	SET [ Y ], C
	ADD X, 1
	ADD Y, 1
	IFN X, 32 ; hide cursor if last allowed character
		SET [Y], 0x8088 ; cursor
	RFI 0
	
:_flop_backspace
	IFL X, 1
		RFI 0
	SUB X, 1
	SET Y, X
	ADD Y, 0x8060
	SET [Y], 0x8088 ; cursor
	SET [Y+1], 0    ; clear old cursor
	SET Y, X
	DIV Y, 2
	SET [_flop_name+Y], 0
	RFI 0

:_flop_return
	JSR _flop_wait_ready
	SET A, 3
	SET X, 0
	SET Y, _flop_space
	HWI [m35fd_id]
	
	JSR _flop_wait_ready
	SET X, 1
	SET Y, _flop_blocklist
	HWI [m35fd_id]
	
	SET Y, _flop_empty
:_flop_file_loop
	JSR _flop_wait_ready
	ADD X, 1
	HWI [m35fd_id]  ; clear rest of block list blocks
	IFN X, 7        ; and first file
		SET PC, _flop_file_Loop
		
	
	
	JSR _flop_wait_ready
	SET J, _flop_done
	SET I, 0x8080
	SET B, 0x2000
	JSR _scr_packed_string
	RFI 0

:_flop_state_change
	SET J, _flop_stfu
	SET I, 0x8020
	SET B, 0xf000
	JSR _scr_packed_string ; clear old text
	
	SET A, 0
	HWI [m35fd_id]    ; poll
	
	IFE B, 0x0000
		SET J, _flop_no_media
	IFE B, 0x0001
		SET J, _flop_ready
	IFE B, 0x0002
		SET J, _flop_ready_wp
	IFE B, 0x0003
		SET J, _flop_busy
	SET I, 0x8020
	SET B, 0xf000
	JSR _scr_packed_string
	
	RFI 0
	
:_flop_wait_ready
	SET PUSH, A
	SET PUSH, B
	;SET PUSH, C
	SET Z, [m35fd_id]
	SET [0x8001], 0x3042
:_flop_wait_ready_loop
	SET A, 0
	HWI [m35fd_id]
	IFN C, 0
		SET [0], C
	IFN B, 0x0001
		SET PC, _flop_wait_ready_loop
	;SET C, POP
	SET B, POP
	SET A, POP
	SET [0x8002], 0x4043
	SET PC, POP
	
:_flop_space
	dat 0x83df   ; magic number
	dat 0x0001   ; version 1
	dat 0x0000   ; header size - we don't care
:_flop_name
	.reserve 16
	dat 0        ; num files
	.reserve 492 ; reserved
	
:_flop_blocklist
	dat 0, 0x1000 ; block 0: header
	dat 0, 0x2000 ; block 1: blocklist
	dat 0, 0x2000 ; block 2: blocklist
	dat 0, 0x2000 ; block 3: blocklist
	dat 0, 0x2000 ; block 4: blocklist
	dat 0, 0x2000 ; block 5: blocklist
	dat 0, 0x2000 ; block 6: blocklist
	.reserve 498  ; rest unused
	
:_flop_no_media DAT 0x4e6f, 0x206d, 0x6564, 0x6961, 0
:_flop_ready DAT 0x5265, 0x6164, 0x7900, 0
:_flop_ready_wp DAT 0x5265, 0x6164, 0x7920, 0x2857, 0x5029, 0
:_flop_busy DAT 0x4275, 0x7379, 0
:_flop_stfu DAT 0x2020, 0x2020, 0x2020, 0x2020, 0x2020, 0
:_flop_enter_name DAT 0x456e, 0x7465, 0x7220, 0x6e65, 0x7720, 0x6472, 0x6976, 0x6520, 0x6e61, 0x6d65, 0x3a00
:_flop_done DAT 0x446f, 0x6e65, 0x2100

; hardware enumeration
:setup_keyboard
            SET [keyboard_id], I   ; I holds the hardware ID, alternatively check hwenum_targets + 3
            SET PC, POP            ; Identified handlers need to pop PC

            
:setup_lem1802
    		SET [lem1802_id], I
            SET PC, POP
            
:setup_m35fd
    		SET [m35fd_id], I
            SET PC, POP

:setup_unknown
    		SET [m35fd_id], I
            SET PC, POP


:keyboard_id DAT 0xffff
:m35fd_id    DAT 0xffff
:lem1802_id  DAT 0xffff

:hwenum_targets
	DAT setup_unknown                           ; Start with one word address to the unknown setup routine
	DAT 0x30cf, 0x7406, 0xffff, setup_keyboard  ; one hardware setup is 4 words long
	DAT 0x7349, 0xf615, 0xffff, setup_lem1802   ; Format: 4 higher ID bits, 4 lower ID bits, recognized
	DAT 0x4fd5, 0x24c5, 0xffff, setup_m35fd
	
.include "hwenum.dasm"
.include "screenutils.dasm"

:_flop_empty
	.reserve 512